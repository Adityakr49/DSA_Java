package Winner;
import java.util.Set;
import java.util.HashSet;
import java.util.PriorityQueue;
class Solution1 {
    public boolean containsDuplicate(int[] nums) {
        PriorityQueue<Integer> pq=new PriorityQueue<>();
        for (int i=0;i<nums.length;i++)
        {
            pq.add(nums[i]);
        }
        Object[] array=pq.toArray();
        for (int i = 0; i < array.length-1; i++) {
            if(array[i]==array[i+1])
                return true;
        }
        return false;
    }
}
class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> seen = new HashSet<>();

// Iterate through the array
        for (int num : nums) {
            // If the element has already been seen, return true
            if (seen.contains(num)) {
                return true;
            }
            // Otherwise, add the element to the hashset
            else {
                seen.add(num);
            }
        }
        return false;
    }
}
public class ContainsDuplicate {
    public static void main(String[] args) {
        int arr[]={94886,28821,20675,98974,22621,91823,44730,6160,99710,46764,46571,55716,
                11540,28266,73209,13807,8993,18841,89902,59175,90398,77670,64665,40145,45521
                ,57445,49570,11896,18068,67432,83592,26821,58985,26944,84818,54572,20638,
                14656,206,70860,93071,44055,96137,3536,72607,78294,97322,77146,57043,54165
                ,90341,61515,8318,1711,80599,37455,83277,24794,77134,25009,148,21904,71534
                ,95227,96105,27114,83113,5950,11348,15844,75966,47447,27051,8887,35354,40231
                ,70795,11906,33565,86815,71649,35906,75200,70001,97367,42827,83577,16687,27315
                ,16493,93667,91973,48885,15583,17731,54936,74874,82474,1399,73080,13759,25206
                ,81472,58730,5147,74013,21594,53260,33459,91020,52332,45901,84370,44027,41557
                ,4514,87642,55924,75849,89189,26048,20291,90824,92839,97513,16950,43040,26594
                ,20167,23935,14649,8783,58112,80561,40255,78519,92347,63255,75073,65568,16186
                ,61602,19834,80650,9385,78664,32019,60731,13899,20208,70056,83777,96104,63008
                ,28428,71002,90604,5387,79698,72818,31054,82023,44135,71636,57306,61287,80836
                ,78352,26708,92361,1258,9380,19237,14751,50478,23179,63532,74961,23120,55092
                ,12115,91851,80565,56438,85709,48354,72609,5012,18795,31209,87165,51285,64547
                ,8065,79916,7191,42555,79696,32996,81768,99831,4296,3391,46343,46169,83667
                ,82261,16701,49607,13177,84668,80863,50429,17661,25111,62883,85121,5166,20165
                ,96894,20336,83057,17487,14860,30648,95509,43731,66779,93877,73367,24166,40222
                ,31864,95441,95535,82125,3254,97102,82770,8988,88462,43211,92971,72981,99668,
                34129,57079,21211,30868,21811,56025,22430,45446,50912,66216,9681,55830,55337,
                26974,36735,11199,44191,49982,88952,75899,39618,70959,43710,35038,99028,16974,
                55099,88110,99690,43518,14102,92178,25133,20089,75483,90083,97745,37093,88997,
                14430,7903,9863,88755,84324,55829,47334,71219,1071,49755,86000,50244,2201,60494,
                23032,51142,99486,21039,26,77302,77269,60841,86286,27067,73164,23466,88895,84616,
                2801,64765,27483,47041,58079,69082,77125,49639,49804,96241,39149,56785,90519,23878,
                9658,52715,5072,8803,34004,41310,97315,28050,48619,7346,19751,1464,3923,95456,90198,
                69272,5620,34983,62002,62935,45350,48695,35120,74875,2207,62659,80166,35908,13636,
                28085,75856,3392,62001,63632,96122,67688,16277,38590,93712,20923,17648,86759,90809,
                36931,32366,4780,33127,11201,47975,28999,48991,95166,50905,43349,32170,47786,9799,
                93446,62071,27764,63117,22313,44442,73450,97906,34777,7776,28488,64337,11707,16436,
                9761,88869,1237,80695,5712,14056,19962,15145,32484,96756,60233,91435,24296,94008,82531,
                63250,39068,91151,94056,48589,60799,86399,6655,64872,6791,14984,33927,81207,61765,3536,
                90393,41221,2880,46373,60693,64749,55793,3535,58710,7558,40311,98399,47243,76650,36251,
                56600,79539,46134,74501,94598,93057,22775,93943,89487,79413,56187,88533,65041,64288,3401,
                67054,18164,46312,66417,37438,80675,12205,26738,25443,8223,21260,77476,50088,29105,15876};
                Solution s=new Solution();
        System.out.println(s.containsDuplicate(arr));
    }
}
